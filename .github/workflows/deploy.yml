name: Deploy Healthcare App to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16"

    - name: Copy Files to EC2
      # https://stackoverflow.com/questions/62087265/deploy-code-directly-to-aws-ec2-instance-using-github-actions
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        REMOTE_HOST: ${{ secrets.AWS_HOST }}
        REMOTE_USER: ${{ secrets.AWS_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.AWS_KEY }}
        SOURCE: "."
        TARGET: "/var/www/myapp"
        SCRIPT_AFTER: |
          ls -alt /var/www/myapp
          sudo touch /var/www/myapp/healtchcare-app.config

    - name: Stop Backend (if running)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        debug: true
        script: |
          # Kill process running on port 8000 (if any)
          sudo fuser -k 8000/tcp || true

    - name: Install Backend Dependencies and Start Backend
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        debug: true
        script: |
          cd /var/www/myapp/backend
          sudo apt update
          sudo apt install python3-venv
          sudo apt install postgresql libpq-dev
          python3 -m venv venv
          source venv/bin/activate
          export SECRET_KEY=${{ secrets.SECRET_KEY }}
          export PG_DATABASE_URL=${{ secrets.PG_DATABASE_URL }}
          export MONGO_URI=${{ secrets.MONGO_URI }}
          export MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
          export ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
          pip install -r requirements.txt
          nohup venv/bin/uvicorn main:app --host 0.0.0.0 --port 8000 > backend.log 2>&1 &

    - name: Stop Frontend (if running)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        debug: true
        script: |
          # Kill process running on port 3000 (if any)
          sudo fuser -k 3000/tcp || true

    - name: Install Frontend Dependencies and Start Frontend
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        script: |
          cd /var/www/myapp/frontend
          export NEXT_PUBLIC_API_HOST=${{ secrets.NEXT_PUBLIC_API_HOST }}
          npm install
          npm run build
          nohup npm start > frontend.log 2>&1 &

    - name: Restart NGINX
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        script: |
          sudo cp /var/www/myapp/nginx-config /etc/nginx/sites-available/default  
          sudo systemctl restart nginx
